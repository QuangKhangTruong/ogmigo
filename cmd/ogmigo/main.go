// Copyright 2021 Matt Ho
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"context"
	"fmt"
	"github.com/thuannguyen2010/ogmigo"
	"github.com/urfave/cli/v2"
	"log"
	"os"
	"os/signal"
)

var opts struct {
	DB     string
	Ogmios string
	Points cli.StringSlice
	Tick   int64
}

func main() {
	app := cli.NewApp()
	app.Flags = []cli.Flag{
		&cli.StringFlag{
			Name:        "ogmios",
			Usage:       "ogmios websocket endpoint",
			Value:       "ws://3.21.245.207:1337", // mainnet2
			EnvVars:     []string{"OGMIOS"},
			Destination: &opts.Ogmios,
		},
		&cli.StringSliceFlag{
			Name:        "point",
			Aliases:     []string{"p"},
			Usage:       "initial starting point in the form {slot}/{hash} e.g.",
			EnvVars:     []string{"POINT"},
			Destination: &opts.Points,
		},
		&cli.Int64Flag{
			Name:        "tick",
			Usage:       "display progress every tick slots",
			EnvVars:     []string{"TICK"},
			Value:       5e3,
			Destination: &opts.Tick,
		},
	}
	app.Action = action
	err := app.Run(os.Args)
	if err != nil {
		log.Fatalln(err)
	}
}

func action(_ *cli.Context) error {
	client := ogmigo.New(
		ogmigo.WithEndpoint("ws://localhost:1337"),
		ogmigo.WithLogger(ogmigo.DefaultLogger),
	)

	ctx := context.Background()
	redeemer, err := client.EvaluateTx(ctx, "84a90082825820207cb0b0856973fd975c0202040bb8470324b3f520b4005b6eef8c0da352752200825820de9379eeb56895a7d90711f34bb3575c98db204f12837a9b156d5be90e16d2ff0101828258390041fa931b257f64696f8361e871211fa6f4d832b9d08d2e400a6a865c2b9f6ee3e1dd784ebba52ba98634ea52f1d78a3601ef20f0bf6b7e80821a001344eea1581c4b9ae3978af62cf98dcc3b9aecc3dbbd2f59fa06b55e1f443e3c7c81a15820cb5adac2eda2c6515c5b2a46b1e3fb559be700ff2dde38be30b9d10535e117a2018258390041fa931b257f64696f8361e871211fa6f4d832b9d08d2e400a6a865c2b9f6ee3e1dd784ebba52ba98634ea52f1d78a3601ef20f0bf6b7e80821b000000021a4a04a3a9581c4086577ed57c514f8e29b78f42ef4f379363355a3b65b9a032ee30c9a2446c7020021a049e5c6e446c7020071a03fd7228581c4b9ae3978af62cf98dcc3b9aecc3dbbd2f59fa06b55e1f443e3c7c81a95820079389604744f143190973559b08cc12ce044f51c56527ddb05a8d648a265f760158202aaa87d80e2da6684de0014119b267662d60b78643cc7655fa23d82738c52b4103582033dc348f06065acafc2c7bf6d39090d3ed1ebadb449565ed53322119cb35a62c09582042e06e1b6fc6b2cf42ede245205047eea1aa852c165edac5f605e223a8925b580958207386a153de1ccb2a45701997162a3d07fa895e67f5a69a3e772d921fda537d21095820859bfe8a48214e732d2c0fe3dcf0d04974729588d39364289605ec8c5e010b5e015820ba3cde516245fa116a6febb606e4c7a8068dbb20dec2a9674836ae7b9e7c75c6015820cb5adac2eda2c6515c5b2a46b1e3fb559be700ff2dde38be30b9d10535e117a2065820ccb3ca6f283479b851b3c911a50eb29608ec2bb19ad739860b57fbc39b4c380b09581c547b3fe2a281c5848a4e5ff122cc9adea9fec111d79ffbbd9b6a5959a25820124808f6bb4dbf4d1b9d246a07219b97fc3901fc183535d4c78b41a26d8d3c8f05582090e2a77cf94f33b6e49b46f80f826b5476693276e43a470389cc2199bbb7b70c01581c8819741bc9cb6299093bea6a6d306fb5faaf3aa4102ae43b8381837db828582001d54f504190c61316450e1aaf5c15a6dbb3efb5a372897d801263b9c7002dc40158201273dd8bede863ea3812f6eb777f1f76c01b08acb2690ce0d9b9653379a3abe801582026f0bbd689434d8bc739056cb0febf16146cefa9a7bd980ee556306ce6c22ed50158202b1e0a2dee24bdf8979cff56202ca974237f99eb22cc18ff84d9a7102b2391de01582034aba2823ef1a906f34027f30de15ea7790254435e15201d2f20664231e513d801582035c3975e88c971bb733169e75dca9eb765b525b00acafccbcd08d0f0711bf46901582035e2611e34ad4c9163c533af2cc85bda82679d1f0557875377c858026f1a154d0158203980017012d79cf6c29406b0db97c2906dfc11afd443858084031259a53a171201582045f30797289ab43519bd76a9d4fe7ce04b21777341b848981eaa6d282736d9e00158204648ca5863b0d268c7ff9eb0dbae4ce247ecc4edc01b1cb086f3cd2aee492a9c0158205f8f5e94de534f5aa2f1a329f8bb1f51aaa296d493ee2bd8e1326a4ef4173887015820614aca5e7f5aba6568d523e2c83005993ca16e6bd2b8613ec73ecad9948b92170158206ea17d9df7fd9efc6eaf501b8460b0be60950c7efaa541c866c633fd7d98682d01582077878779b5ecf51277509c5902667931ac54052f50443bd78bb1b754ea906f3a01582079d87632a52429025b7665944296d80f9cc84ed8bf99e187e323489c5b575bf60158207b35962ae8b8730a330dfc1ad59fe301616f2235e264e1400e827245aa9cc5f80158207c7fe0fa8118e40f1748baa585ce35e757cfd20f81c415adbbfddcf44cb48262015820845ddcba9047830fdfb20657cf54a6a9b48ff1db53edbba25e44abedd72e26b5015820859bfe8a48214e732d2c0fe3dcf0d04974729588d39364289605ec8c5e010b5e0158208e16bfacb41b89ba1d993d1afa546f5902263806561ea71034fa5b7ad5ac67ea0158208fadb45132e517276b810f60f55b58c7ce60337074f1f952de0160019e920802015820a81c1233db69d1ef3b5cd4cdc7f29cc1d70920bf2e11ace529428049cb6602a9015820b47ea682266d86ba2075036494e216fe33fb98ee5e49e266442a6967c0086824015820b541e1b2dc46c187a21041c3b23425c6f92074aedd9fd62b692b6abea0b98f24015820b67549affdf85fd5785f1937d8db3a4f2882bcb94ef60a485a3506b7381022d5015820b7ca771127dcef8010ca52ca9bd6146c70427ee34bbdf5e88dc661e23bb8a5c7015820ba3cde516245fa116a6febb606e4c7a8068dbb20dec2a9674836ae7b9e7c75c6015820ba3dd3a97d28f3ac92b8a890199e9bc58ced5582e0fd0413cd8a13f4c93afbd0015820ca665f8dde747e30d7b905c996464f2e0d40fc342f0b9df25a5750c603966e09015820cbb50faeee455269b033b8b0f0135cc9a2cd5d5b60fbc32e7874cfa35303c11c015820cdec4b7a5a6510a9210841b1548bd32acdf49fbdf9420dcdab4f70a481629c06015820d0d4eb57fd2b5e1b7022625e3b634051c19de7c9715a24f5a57a0604084c2f3b015820d56f0d1ad280507a3eb593b9a542fc310d2972dcb4e474c935ca7d7e20f8896a015820d7376bdd4bbb5264afe7df580eea2802f93865f16d4f1f6cfc1fe6a16443a89a015820d97a3b28bace67ba8015127b21674dd7e9a81a29f9fa57233ede37888e17b1b3015820dfb63b000c9f6104d5da9978d1635e721e0d5d6b324e5f7dabe9b8e93a3fa8ba015820e0ed04c4241cdc5481c0182087b73e0256a4aec4e8a54010339001b138e099f7015820e6f1ad5858786ae56dbfd6a0e5137e3ff1663d5bde1b42a2b3036ba7d034b99e015820f0d11bb887c118835f3d419dc797e38a24c7732f4836cd2625aa81044a62d11c015820fe8a7d27183dac945bd643b201665b1197f599ea889fd446330a4c00ab1e07c401581c935380397dcdfc0d5c0ab6b49aa08e9d43ef6ef4888eae8ce23fcc62a158208e16bfacb41b89ba1d993d1afa546f5902263806561ea71034fa5b7ad5ac67ea01581cb7361f47fdf5cebea058988a61902548a51ff91ea35f922ee0119cf6a15820b67549affdf85fd5785f1937d8db3a4f2882bcb94ef60a485a3506b7381022d501581cda0b8462c53a9c8afc72aa5546a01b8b5be7316fbd40139d3e98f493a15820c76a9b5efafca2cfff6f4e9a9b80c36733dc81ff8a9d6c72ae66305b30dfc2c902581cfa3eff2047fdf9293c5feef4dc85ce58097ea1c6da4845a351535183a14574494e44591a026d3895581cfdc6402cf6c5a22e389ebb3f813af09f3502377885c2046e98ce2c88a144695553441a02bce43a021a000471190b5820f3928bd1cc7898e4721402af026573c145b85c5e011d8ead661e9ca41bfbc2f80d81825820193544682c521f31bacb7b0a5dce193be72cae4a4c1c8ffbb6820734521dfe77010e81581c41fa931b257f64696f8361e871211fa6f4d832b9d08d2e400a6a865c108258390041fa931b257f64696f8361e871211fa6f4d832b9d08d2e400a6a865c2b9f6ee3e1dd784ebba52ba98634ea52f1d78a3601ef20f0bf6b7e801a97155be1111a0006a9a61281825820fce8d79548cbb4d503d351d832a7bcfc002044da585a7cf6b5de33dc86acf90400a10581840000d87980821a0001f1001a02dbd9faf5f6")
	if err != nil {
		panic(err)
	}
	fmt.Println(redeemer)
	stop := make(chan os.Signal, 1)
	signal.Notify(stop, os.Kill, os.Interrupt)

	<-stop

	return nil
}
